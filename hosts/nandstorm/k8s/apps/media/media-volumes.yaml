---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-config-pv
  labels: { app: jellyfin, component: config }
spec:
  capacity: { storage: 1Gi }
  accessModes: [ "ReadWriteOnce" ]
  volumeMode: Filesystem
  persistentVolumeReclaimPolicy: Retain
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values: [ "nandstorm" ]
  hostPath:
    path: /persist/jellyfin
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-config-pvc
  namespace: media
spec:
  storageClassName: ""
  volumeName: jellyfin-config-pv
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests: { storage: 1Gi }
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyseerr-config-pv
  labels: { app: jellyseerr, component: config }
spec:
  capacity: { storage: 1Gi }
  accessModes: [ "ReadWriteOnce" ]
  volumeMode: Filesystem
  persistentVolumeReclaimPolicy: Retain
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values: [ "nandstorm" ]
  hostPath:
    path: /persist/jellyseerr
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyseerr-config-pvc
  namespace: media
spec:
  storageClassName: ""
  volumeName: jellyseerr-config-pv
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests: { storage: 1Gi }
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: prowlarr-config-pv
  labels: { app: prowlarr, component: config }
spec:
  capacity: { storage: 1Gi }
  accessModes: [ "ReadWriteOnce" ]
  volumeMode: Filesystem
  persistentVolumeReclaimPolicy: Retain
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values: [ "nandstorm" ]
  hostPath:
    path: /persist/prowlarr
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prowlarr-config-pvc
  namespace: media
spec:
  storageClassName: ""
  volumeName: prowlarr-config-pv
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests: { storage: 1Gi }
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: radarr-config-pv
  labels: { app: radarr, component: config }
spec:
  capacity: { storage: 1Gi }
  accessModes: [ "ReadWriteOnce" ]
  volumeMode: Filesystem
  persistentVolumeReclaimPolicy: Retain
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values: [ "nandstorm" ]
  hostPath:
    path: /persist/radarr
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-config-pvc
  namespace: media
spec:
  storageClassName: ""
  volumeName: radarr-config-pv
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests: { storage: 1Gi }
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarr-config-pv
  labels: { app: sonarr, component: config }
spec:
  capacity: { storage: 1Gi }
  accessModes: [ "ReadWriteOnce" ]
  volumeMode: Filesystem
  persistentVolumeReclaimPolicy: Retain
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values: [ "nandstorm" ]
  hostPath:
    path: /persist/sonarr
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-config-pvc
  namespace: media
spec:
  storageClassName: ""
  volumeName: sonarr-config-pv
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests: { storage: 1Gi }
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: transmission-config-pv
  labels: { app: transmission, component: config }
spec:
  capacity: { storage: 1Gi }
  accessModes: [ "ReadWriteOnce" ]
  volumeMode: Filesystem
  persistentVolumeReclaimPolicy: Retain
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values: [ "nandstorm" ]
  hostPath:
    path: /persist/transmission
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: transmission-config-pvc
  namespace: media
spec:
  storageClassName: ""
  volumeName: transmission-config-pv
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests: { storage: 1Gi }
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: media-pv
  labels: { app: media, component: library }
spec:
  capacity: { storage: 800Gi }
  accessModes: [ "ReadWriteOnce" ]
  volumeMode: Filesystem
  persistentVolumeReclaimPolicy: Retain
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values: [ "nandstorm" ]
  hostPath:
    path: /media
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-pvc
  namespace: media
spec:
  storageClassName: ""
  volumeName: media-pv
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests: { storage: 800Gi }
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: downloads-pv
  labels: { app: media, component: downloads }
spec:
  capacity: { storage: 250Gi }
  accessModes: [ "ReadWriteOnce" ]
  volumeMode: Filesystem
  persistentVolumeReclaimPolicy: Retain
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values: [ "nandstorm" ]
  hostPath:
    path: /media/downloads
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: downloads-pvc
  namespace: media
spec:
  storageClassName: ""
  volumeName: downloads-pv
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests: { storage: 250Gi }

